// Mocks generated by Mockito 5.4.4 from annotations
// in movie_finder/test/presentation/bloc/watchlist/watchlist_handler_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_finder/domain/usecases/add_to_watchlist.dart' as _i4;
import 'package:movie_finder/domain/usecases/is_movie_on_watchlist.dart' as _i2;
import 'package:movie_finder/domain/usecases/remove_from_watchlist.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IsMovieOnWatchlistUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockIsMovieOnWatchlistUseCase extends _i1.Mock
    implements _i2.IsMovieOnWatchlistUseCase {
  MockIsMovieOnWatchlistUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> call({int? params}) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [AddToWatchlistUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddToWatchlistUseCase extends _i1.Mock
    implements _i4.AddToWatchlistUseCase {
  MockAddToWatchlistUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> call({int? params}) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [RemoveFromWatchlistUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveFromWatchlistUseCase extends _i1.Mock
    implements _i5.RemoveFromWatchlistUseCase {
  MockRemoveFromWatchlistUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> call({int? params}) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
